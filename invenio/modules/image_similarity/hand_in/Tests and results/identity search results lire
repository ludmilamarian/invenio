identity search results:

for ft in d:
    min = 0 
    scores = list()
    max = 0 
    mean = 0
    for srch in d[ft]:
        scores.append(float(srch[1]))
    print ft
    print numpy.amin(scores)
    print numpy.amax(scores)
    print numpy.mean(scores)


for ft in d:
   ...:     min = 0 
   ...:     scores = list()
   ...:     max = 0 
   ...:     mean = 0
   ...:     for srch in d[ft]:
   ...:         scores.append(float(srch[1]))
   ...:     print ft
   ...:     print numpy.amin(scores)
   ...:     print numpy.amax(scores)
   ...:     print numpy.mean(scores)
   ...: 
11
0.0
0.0
0.0
10
0.0
0.0
0.0
13
0.0
0.0
0.0
12
0.0
0.0
0.0
14
0.0
0.0
0.0
1
0.0
1.1079211235
0.474792532474
0
0.0
0.0
0.0
3
0.0
0.0
0.0
2
0.0
0.0
0.0
5
0.0
0.0
0.0
4
0.0
0.0
0.0
7
0.0
0.0
0.0
6
0.0
0.0
0.0
9
0.0
0.0
0.0
8
0.0
0.0
0.0
Standardized
62.0650373169
94.333224248
83.744811448
Combined
14.9756036449
15.0
14.9875631754




rates = dict()

In [11]: for ft in h['identity'].keys():
    count = 0
    for i in range(len(h['identity'][ft])):
        if h['identity'][ft][i][0] == h['identity'][ft][i][1]:
            count = count + 1
    rates[ft] = float(count) / len(h['identity'][ft])
   ....: 

In [12]: rates
Out[12]: 
{'0': 1.0,
 '1': 1.0,
 '10': 1.0,
 '11': 1.0,
 '12': 1.0,
 '13': 0.9975,
 '14': 1.0,
 '2': 1.0,
 '3': 1.0,
 '4': 0.9925,
 '5': 1.0,
 '6': 1.0,
 '7': 1.0,
 '8': 1.0,
 '9': 1.0,
 'Combined': 1.0,
 'Standardized': 1.0}

In [16]: for ft in h['identity'].keys():
    count = 0
    for i in range(len(h['identity'][ft])):
        if h['identity'][ft][i][0] != h['identity'][ft][i][1]:
            print h['identity'][ft][i][0]
            print ft
   ....:             print h['identity'][ft][i][1] + '--'
   ....: 
1303
13
1311--
765
4
288--
506
4
288--
503
4
288--

